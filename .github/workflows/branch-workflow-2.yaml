name: branch workflow 2

on:
  workflow_dispatch:
    inputs:
      data:
        type: string
        required: true
  repository_dispatch:
    types: [pull-request-event]

env:
  AWS_REGION: "eu-west-2"

permissions:
  id-token: write
  contents: read

jobs:
  comment:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: Run stuff
        run: echo "this is working for me"

      # - name: Create file
      #   run: |
      #     echo "${{ github.event.inputs.environment }}"
      #     echo "${{ github.event.inputs.avm_aws_account_email }}"
      #     echo "${{ github.event.inputs.alternate_contacts }}"
      #     echo "${{ github.event.inputs.avm_org_ou_name }}"
      #     echo "${{ github.event.inputs.auto_shutdown_enabled }}"

      #     name="${{ github.event.inputs.name }}"
      #     lastName="${{ github.event.inputs.lastName }}"

      #     cat <<EOF > etc/my-new-file.tf
      #     $name
      #     $lastName
      #     EOF

      #     value="`cat etc/my-new-file.tf`"
      #     echo "$value"

      - name: Create file
        run: |
          echo "${{ github.event.inputs.data }}"
          echo "${{ fromJson(github.event.inputs.data).environment }}"
          echo "${{ fromJson(github.event.inputs.data).alternate_contacts }}"

          data="${{ fromJson(github.event.inputs.data) }}"

          echo $data.environment

      # - name: Generate .tfvars File
      #   run: |
      #     # Extract values from the payload
      #     environment="${{ github.event.client_payload.environment }}"
      #     avm_aws_account_name="${{ github.event.client_payload.environment }}"
      #     avm_aws_account_email="${{ github.event.client_payload.avm_aws_account_email }}"
      #     avm_aws_account_alias="${{ github.event.client_payload.environment }}"
      #     avm_org_ou_name="${{ github.event.client_payload.avm_org_ou_name }}"
      #     alternate_contacts='${{ toJson(github.event.client_payload.alternate_contacts) }}'
      #     avm_subdomain='${{ toJson(github.event.client_payload.avm_subdomain) }}'
      #     auto_shutdown_enabled="${{ github.event.client_payload.auto_shutdown_enabled }}"

      #     # Generate .tfvars file content dynamically
      #     cat <<EOF > etc/env_eu-west-2_${{ github.event.client_payload.environment }}.tfvars
      #     environment           = "$environment"
      #     avm_aws_account_name  = "$avm_aws_account_name"
      #     avm_aws_account_email = "$avm_aws_account_email"
      #     avm_aws_account_alias = "halo-np-$avm_aws_account_alias"
      #     avm_org_ou_name       = "$avm_org_ou_name"

      #     avm_alternate_account_contacts = {
      #       operations = {
      #         email_address = "$(echo "$alternate_contacts" | jq -r '.operations.email_address')"
      #         name          = "$(echo "$alternate_contacts" | jq -r '.operations.name')"
      #         phone_number  = "$(echo "$alternate_contacts" | jq -r '.operations.phone_number')"
      #         title         = "$(echo "$alternate_contacts" | jq -r '.operations.title')"
      #       }
      #       security = {
      #         email_address = "$(echo "$alternate_contacts" | jq -r '.security.email_address')"
      #         name          = "$(echo "$alternate_contacts" | jq -r '.security.name')"
      #         phone_number  = "$(echo "$alternate_contacts" | jq -r '.security.phone_number')"
      #         title         = "$(echo "$alternate_contacts" | jq -r '.security.title')"
      #       }
      #     }

      #     avm_aws_account_subdomains = {
      #       "$(echo "$avm_subdomain" | jq -r '.parent')" = [
      #         $(echo "$avm_subdomain" | jq -r '.children | map("\"\(.)\"") | join(", ")')
      #       ]
      #     }

      #     avm_vpcs = {
      #       main = {
      #         subnets_transit = "${{ env.formattedOutput }}"
      #         vpc_cidr        = "${{ env.Cidr }}"
      #         }
      #     }
      #     avm_auto_shutdown_enabled = "$auto_shutdown_enabled"
      #     EOF
